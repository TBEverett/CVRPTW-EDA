Call: /usr/bin/ruby ../scripts/param_ils_2_3_run.rb "-numRun" "0" "-approach" "focused" "-userunlog" "1" "-validN" "0" "-pruning" "0" "-maxEvals" "1000" "-scenariofile" "../_C2_2_2_baseTuning/scn/SolveVRP.scn"


seed: 1234
algo: bash SolveVRP.sh
tunerTimeout (CPU time): 100000000.0
maxWallTime: 8640000.0
maxEvals: 1000
run_obj: runlength
overall_obj: mean
instance_file: inst/single.inst
test_instance_file: inst/single.inst
N: 2000
cutoff_time: 1000000000.0
cutoff_length: 2147483647
R: 10
pertubation_strength_basic: 
pertubation_strength_scaling: false
p_restart: 0.01
Run 1
Level 
========================================================
Starting ILS for level 1, i.e. a limit of N=2000, and cutoff time=1000000000.0.
Current CPU time = 0, this run goes until 100000000.0 
========================================================
New Incumbent: 0, 100000000 [0, 0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
 Same incumbent, new precision:
New Incumbent: 0.1, 1851.0 [1, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
          -> Take improving step to random gs=70 nc=0.8 ne=0.8 ps=5 xi=0.2 (1851.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=20 nc=0.2 ne=0.4 ps=35 xi=0.8 (1851.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=100 nc=0.4 ne=0.4 ps=5 xi=0.1 (1851.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=100 nc=0.1 ne=0.2 ps=25 xi=0.1 (1851.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=70 nc=0.8 ne=0.4 ps=25 xi=0.6 (1851.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=70 nc=0.1 ne=0.2 ps=35 xi=0.1 (1851.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=70 nc=0.4 ne=0.6 ps=45 xi=0.2 (1851.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=70 nc=0.6 ne=0.6 ps=25 xi=0.2 (1851.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=70 nc=0.8 ne=0.4 ps=35 xi=0.8 (1851.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=20 nc=0.8 ne=0.1 ps=45 xi=0.2 (1851.0 [based on 1 runs with cutoff 1000000000.0])

   BLS in iteration 1, start with gs=20 nc=0.8 ne=0.1 ps=45 xi=0.2 (1851.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["nc: 0.8->0.2"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.1 ps=45 xi=0.2 (1851.0 [based on 1 runs with cutoff 1000000000.0]) with flip 1

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.1 ps=45 xi=0.2 (1851.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

State wants more detail (1+1) than incumbent (1), doing incumbent first:
gs=20 nc=0.2 ne=0.1 ps=45 xi=0.2 (1851.0 [based on 1 runs with cutoff 1000000000.0])
gs=40 nc=0.4 ne=0.4 ps=25 xi=0.4 (1851.0 [based on 1 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 1.3, 1851.0 [2, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.1 ps=45 xi=0.2 (1851.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["ps: 45->15"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.1 ps=15 xi=0.2 (1851.0 [based on 2 runs with cutoff 1000000000.0]) with flip 2

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.1 ps=15 xi=0.2 (1851.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

State wants more detail (2+1) than incumbent (2), doing incumbent first:
gs=20 nc=0.2 ne=0.1 ps=15 xi=0.2 (1851.0 [based on 2 runs with cutoff 1000000000.0])
gs=40 nc=0.4 ne=0.4 ps=25 xi=0.4 (1851.0 [based on 2 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 1.7000000000000004, 1851.0 [3, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.1 ps=15 xi=0.2 (1851.0 [based on 3 runs with cutoff 1000000000.0])

    Changing ["xi: 0.2->0.1"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.1 ps=15 xi=0.1 (1851.0 [based on 3 runs with cutoff 1000000000.0]) with flip 3

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.1 ps=15 xi=0.1 (1851.0 [based on 3 runs with cutoff 1000000000.0]) ============ 

State wants more detail (3+1) than incumbent (3), doing incumbent first:
gs=20 nc=0.2 ne=0.1 ps=15 xi=0.1 (1851.0 [based on 3 runs with cutoff 1000000000.0])
gs=40 nc=0.4 ne=0.4 ps=25 xi=0.4 (1851.0 [based on 3 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 2.2000000000000006, 1851.25 [4, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
New inc: 1851.0
New Incumbent: 2.3000000000000007, 1851.0 [4, 1000000000.0]. With state gs=20, nc=0.2, ne=0.1, ps=15, xi=0.1
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.1 ps=15 xi=0.1 (1851.0 [based on 4 runs with cutoff 1000000000.0])

    Changing ["ne: 0.1->0.4"], evaluating ...
        -> worse: (1852.5 [based on 4 runs with cutoff 1000000000.0])
    Changing ["ne: 0.1->0.2"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 4 runs with cutoff 1000000000.0]) with flip 4

          
============= Performing 2 bonus runs of state: gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 4 runs with cutoff 1000000000.0]) ============ 

State wants more detail (4+1) than incumbent (4), doing incumbent first:
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 4 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.1 ps=15 xi=0.1 (1851.0 [based on 4 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 3.2000000000000015, 1851.0 [5, 1000000000.0]. With state gs=20, nc=0.2, ne=0.1, ps=15, xi=0.1
State wants more detail (5+1) than incumbent (5), doing incumbent first:
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 5 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.1 ps=15 xi=0.1 (1851.0 [based on 5 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 3.4000000000000017, 1851.6666666666667 [6, 1000000000.0]. With state gs=20, nc=0.2, ne=0.1, ps=15, xi=0.1
New inc: 1851.0
New Incumbent: 3.5000000000000018, 1851.0 [6, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
          -> After 2 bonus runs: gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 6 runs with cutoff 1000000000.0])

    Changing ["ps: 15->5"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.2 ps=5 xi=0.1 (1851.0 [based on 6 runs with cutoff 1000000000.0]) with flip 5

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.2 ps=5 xi=0.1 (1851.0 [based on 6 runs with cutoff 1000000000.0]) ============ 

State wants more detail (6+1) than incumbent (6), doing incumbent first:
gs=20 nc=0.2 ne=0.2 ps=5 xi=0.1 (1851.0 [based on 6 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 6 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 4.200000000000001, 1851.0 [7, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.2 ps=5 xi=0.1 (1851.0 [based on 7 runs with cutoff 1000000000.0])

    Changing ["nc: 0.2->0.6"], evaluating ...
        -> worse: (1851.6666666666667 [based on 3 runs with cutoff 1000000000.0])
    Changing ["ps: 5->25"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.2 ps=25 xi=0.1 (1851.0 [based on 7 runs with cutoff 1000000000.0]) with flip 6

          
============= Performing 2 bonus runs of state: gs=20 nc=0.2 ne=0.2 ps=25 xi=0.1 (1851.0 [based on 7 runs with cutoff 1000000000.0]) ============ 

State wants more detail (7+1) than incumbent (7), doing incumbent first:
gs=20 nc=0.2 ne=0.2 ps=25 xi=0.1 (1851.0 [based on 7 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 7 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5.399999999999997, 1851.0 [8, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
State wants more detail (8+1) than incumbent (8), doing incumbent first:
gs=20 nc=0.2 ne=0.2 ps=25 xi=0.1 (1851.0 [based on 8 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 8 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5.599999999999996, 1851.0 [9, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
          -> After 2 bonus runs: gs=20 nc=0.2 ne=0.2 ps=25 xi=0.1 (1851.0 [based on 9 runs with cutoff 1000000000.0])

    Changing ["xi: 0.1->0.8"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.2 ps=25 xi=0.8 (1851.0 [based on 9 runs with cutoff 1000000000.0]) with flip 7

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.2 ps=25 xi=0.8 (1851.0 [based on 9 runs with cutoff 1000000000.0]) ============ 

State wants more detail (9+1) than incumbent (9), doing incumbent first:
gs=20 nc=0.2 ne=0.2 ps=25 xi=0.8 (1851.0 [based on 9 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 9 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6.699999999999992, 1851.0 [10, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.2 ps=25 xi=0.8 (1851.0 [based on 10 runs with cutoff 1000000000.0])

    Changing ["ps: 25->45"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.2 ps=45 xi=0.8 (1851.0 [based on 10 runs with cutoff 1000000000.0]) with flip 8

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.2 ps=45 xi=0.8 (1851.0 [based on 10 runs with cutoff 1000000000.0]) ============ 

State wants more detail (10+1) than incumbent (10), doing incumbent first:
gs=20 nc=0.2 ne=0.2 ps=45 xi=0.8 (1851.0 [based on 10 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 10 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 7.899999999999988, 1851.0 [11, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.2 ps=45 xi=0.8 (1851.0 [based on 11 runs with cutoff 1000000000.0])

    Changing ["xi: 0.8->0.2"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.2 ps=45 xi=0.2 (1851.0 [based on 11 runs with cutoff 1000000000.0]) with flip 9

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.2 ps=45 xi=0.2 (1851.0 [based on 11 runs with cutoff 1000000000.0]) ============ 

State wants more detail (11+1) than incumbent (11), doing incumbent first:
gs=20 nc=0.2 ne=0.2 ps=45 xi=0.2 (1851.0 [based on 11 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 11 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 9.199999999999983, 1851.0 [12, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.2 ps=45 xi=0.2 (1851.0 [based on 12 runs with cutoff 1000000000.0])

    Changing ["xi: 0.2->0.6"], evaluating ...
101/1000, 10.09999999999998/100000000.0
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.2 ps=45 xi=0.6 (1851.0 [based on 12 runs with cutoff 1000000000.0]) with flip 10

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.2 ps=45 xi=0.6 (1851.0 [based on 12 runs with cutoff 1000000000.0]) ============ 

State wants more detail (12+1) than incumbent (12), doing incumbent first:
gs=20 nc=0.2 ne=0.2 ps=45 xi=0.6 (1851.0 [based on 12 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 12 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 10.599999999999978, 1851.0 [13, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.2 ps=45 xi=0.6 (1851.0 [based on 13 runs with cutoff 1000000000.0])

    Changing ["ps: 45->25"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.2 ps=25 xi=0.6 (1851.0 [based on 13 runs with cutoff 1000000000.0]) with flip 11

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.2 ps=25 xi=0.6 (1851.0 [based on 13 runs with cutoff 1000000000.0]) ============ 

State wants more detail (13+1) than incumbent (13), doing incumbent first:
gs=20 nc=0.2 ne=0.2 ps=25 xi=0.6 (1851.0 [based on 13 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 13 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 12.099999999999973, 1851.0 [14, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.2 ps=25 xi=0.6 (1851.0 [based on 14 runs with cutoff 1000000000.0])

    Changing ["gs: 20->70"], evaluating ...
          -> Take improving step to neighbour gs=70 nc=0.2 ne=0.2 ps=25 xi=0.6 (1851.0 [based on 14 runs with cutoff 1000000000.0]) with flip 12

          
============= Performing 1 bonus runs of state: gs=70 nc=0.2 ne=0.2 ps=25 xi=0.6 (1851.0 [based on 14 runs with cutoff 1000000000.0]) ============ 

State wants more detail (14+1) than incumbent (14), doing incumbent first:
gs=70 nc=0.2 ne=0.2 ps=25 xi=0.6 (1851.0 [based on 14 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 14 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 13.699999999999967, 1851.0 [15, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
          -> After 1 bonus runs: gs=70 nc=0.2 ne=0.2 ps=25 xi=0.6 (1851.0 [based on 15 runs with cutoff 1000000000.0])

    Changing ["nc: 0.2->0.4"], evaluating ...
        -> worse: (1851.4 [based on 5 runs with cutoff 1000000000.0])
    Changing ["ps: 25->35"], evaluating ...
          -> Take improving step to neighbour gs=70 nc=0.2 ne=0.2 ps=35 xi=0.6 (1851.0 [based on 15 runs with cutoff 1000000000.0]) with flip 13

          
============= Performing 2 bonus runs of state: gs=70 nc=0.2 ne=0.2 ps=35 xi=0.6 (1851.0 [based on 15 runs with cutoff 1000000000.0]) ============ 

State wants more detail (15+1) than incumbent (15), doing incumbent first:
gs=70 nc=0.2 ne=0.2 ps=35 xi=0.6 (1851.0 [based on 15 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 15 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 15.89999999999996, 1851.0 [16, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
State wants more detail (16+1) than incumbent (16), doing incumbent first:
gs=70 nc=0.2 ne=0.2 ps=35 xi=0.6 (1851.0 [based on 16 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 16 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 16.09999999999996, 1851.0 [17, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
          -> After 2 bonus runs: gs=70 nc=0.2 ne=0.2 ps=35 xi=0.6 (1851.0 [based on 17 runs with cutoff 1000000000.0])

    Changing ["nc: 0.2->0.6"], evaluating ...
        -> worse: (1851.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["ne: 0.2->0.1"], evaluating ...
        -> worse: (1851.142857142857 [based on 7 runs with cutoff 1000000000.0])
    Changing ["nc: 0.2->0.1"], evaluating ...
        -> worse: (1851.1 [based on 10 runs with cutoff 1000000000.0])
    Changing ["gs: 70->100"], evaluating ...
        -> worse: (1851.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["ne: 0.2->0.4"], evaluating ...
          -> Take improving step to neighbour gs=70 nc=0.2 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 17 runs with cutoff 1000000000.0]) with flip 14

          
============= Performing 5 bonus runs of state: gs=70 nc=0.2 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 17 runs with cutoff 1000000000.0]) ============ 

State wants more detail (17+1) than incumbent (17), doing incumbent first:
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 17 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 17 runs with cutoff 1000000000.0])
201/1000, 20.100000000000016/100000000.0
 Same incumbent, new precision:
New Incumbent: 20.100000000000016, 1851.0 [18, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
State wants more detail (18+1) than incumbent (18), doing incumbent first:
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 18 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 18 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 20.30000000000002, 1851.0 [19, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
State wants more detail (19+1) than incumbent (19), doing incumbent first:
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 19 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.2 ps=15 xi=0.1 (1851.0 [based on 19 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 20.50000000000002, 1851.2 [20, 1000000000.0]. With state gs=20, nc=0.2, ne=0.2, ps=15, xi=0.1
New inc: 1851.0
New Incumbent: 20.600000000000023, 1851.0 [20, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.6
 Same incumbent, new precision:
New Incumbent: 20.700000000000024, 1851.0 [21, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.6
 Same incumbent, new precision:
New Incumbent: 20.800000000000026, 1851.0 [22, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.6
          -> After 5 bonus runs: gs=70 nc=0.2 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 22 runs with cutoff 1000000000.0])

    Changing ["ps: 35->25"], evaluating ...
        -> worse: (1851.4 [based on 5 runs with cutoff 1000000000.0])
    Changing ["xi: 0.6->0.1"], evaluating ...
        -> worse: (1851.2222222222222 [based on 9 runs with cutoff 1000000000.0])
    Changing ["xi: 0.6->0.2"], evaluating ...
        -> worse: (1851.3846153846155 [based on 13 runs with cutoff 1000000000.0])
    Changing ["xi: 0.6->0.4"], evaluating ...
          -> Take improving step to neighbour gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 22 runs with cutoff 1000000000.0]) with flip 15

          
============= Performing 4 bonus runs of state: gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 22 runs with cutoff 1000000000.0]) ============ 

State wants more detail (22+1) than incumbent (22), doing incumbent first:
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 22 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 22 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 25.800000000000097, 1851.0 [23, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.6
State wants more detail (23+1) than incumbent (23), doing incumbent first:
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 23 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 23 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 26.0000000000001, 1851.0 [24, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.6
State wants more detail (24+1) than incumbent (24), doing incumbent first:
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 24 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 24 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 26.200000000000102, 1851.08 [25, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.6
New inc: 1851.0
New Incumbent: 26.300000000000104, 1851.0 [25, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
 Same incumbent, new precision:
New Incumbent: 26.400000000000105, 1851.0 [26, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
          -> After 4 bonus runs: gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 26 runs with cutoff 1000000000.0])

    Changing ["gs: 70->40"], evaluating ...
          -> Take improving step to neighbour gs=40 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 26 runs with cutoff 1000000000.0]) with flip 16

          
============= Performing 1 bonus runs of state: gs=40 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 26 runs with cutoff 1000000000.0]) ============ 

State wants more detail (26+1) than incumbent (26), doing incumbent first:
gs=40 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 26 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 26 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 29.100000000000144, 1851.0 [27, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
          -> After 1 bonus runs: gs=40 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 27 runs with cutoff 1000000000.0])

    Changing ["ne: 0.4->0.6"], evaluating ...
        -> worse: (1853.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["nc: 0.2->0.1"], evaluating ...
301/1000, 30.100000000000158/100000000.0
          -> Take improving step to neighbour gs=40 nc=0.1 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 27 runs with cutoff 1000000000.0]) with flip 17

          
============= Performing 2 bonus runs of state: gs=40 nc=0.1 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 27 runs with cutoff 1000000000.0]) ============ 

State wants more detail (27+1) than incumbent (27), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 27 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 27 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 32.30000000000019, 1851.0 [28, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
State wants more detail (28+1) than incumbent (28), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 28 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 28 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 32.50000000000019, 1851.0 [29, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
          -> After 2 bonus runs: gs=40 nc=0.1 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 29 runs with cutoff 1000000000.0])

    Changing ["xi: 0.4->0.6"], evaluating ...
          -> Take improving step to neighbour gs=40 nc=0.1 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 29 runs with cutoff 1000000000.0]) with flip 18

          
============= Performing 1 bonus runs of state: gs=40 nc=0.1 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 29 runs with cutoff 1000000000.0]) ============ 

State wants more detail (29+1) than incumbent (29), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 29 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 29 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 35.600000000000236, 1851.0 [30, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
          -> After 1 bonus runs: gs=40 nc=0.1 ne=0.4 ps=35 xi=0.6 (1851.0 [based on 30 runs with cutoff 1000000000.0])

    Changing ["nc: 0.1->0.8"], evaluating ...
        -> worse: (1851.0666666666666 [based on 30 runs with cutoff 1000000000.0])
    Changing ["ps: 35->5"], evaluating ...
        -> worse: (1853.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["xi: 0.6->0.1"], evaluating ...
401/1000, 40.1000000000003/100000000.0
        -> worse: (1851.090909090909 [based on 22 runs with cutoff 1000000000.0])
    Changing ["ne: 0.4->0.6"], evaluating ...
        -> worse: (1851.6666666666667 [based on 3 runs with cutoff 1000000000.0])
    Changing ["gs: 40->10"], evaluating ...
        -> worse: (1851.1304347826087 [based on 23 runs with cutoff 1000000000.0])
    Changing ["ps: 35->15"], evaluating ...
        -> worse: (1852.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["gs: 40->100"], evaluating ...
        -> worse: (1851.6666666666667 [based on 3 runs with cutoff 1000000000.0])
    Changing ["ps: 35->45"], evaluating ...
          -> Take improving step to neighbour gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 30 runs with cutoff 1000000000.0]) with flip 19

          
============= Performing 8 bonus runs of state: gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 30 runs with cutoff 1000000000.0]) ============ 

State wants more detail (30+1) than incumbent (30), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 30 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 30 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 47.2000000000004, 1851.0 [31, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
State wants more detail (31+1) than incumbent (31), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0645161290322 [based on 31 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 31 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 47.400000000000404, 1851.0 [32, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
State wants more detail (32+1) than incumbent (32), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0625 [based on 32 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 32 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 47.600000000000406, 1851.0 [33, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
State wants more detail (33+1) than incumbent (33), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.060606060606 [based on 33 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 33 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 47.80000000000041, 1851.0 [34, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
State wants more detail (34+1) than incumbent (34), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0588235294117 [based on 34 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 34 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 48.00000000000041, 1851.0 [35, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
State wants more detail (35+1) than incumbent (35), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.057142857143 [based on 35 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 35 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 48.200000000000415, 1851.0 [36, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
State wants more detail (36+1) than incumbent (36), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0555555555557 [based on 36 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.0 [based on 36 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 48.40000000000042, 1851.054054054054 [37, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
State wants more detail (37+1) than incumbent (37), doing incumbent first:
gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.054054054054 [based on 37 runs with cutoff 1000000000.0])
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.4 (1851.054054054054 [based on 37 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 48.60000000000042, 1851.0526315789473 [38, 1000000000.0]. With state gs=70, nc=0.2, ne=0.4, ps=35, xi=0.4
          -> After 8 bonus runs: gs=40 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0526315789473 [based on 38 runs with cutoff 1000000000.0])

    Changing ["gs: 40->20"], evaluating ...
501/1000, 50.10000000000044/100000000.0
New inc: 1851.0
New Incumbent: 52.500000000000476, 1851.0 [38, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
          -> Take improving step to neighbour gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 38 runs with cutoff 1000000000.0]) with flip 20

          
============= Performing 1 bonus runs of state: gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 38 runs with cutoff 1000000000.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 52.60000000000048, 1851.0 [39, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
          -> After 1 bonus runs: gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 39 runs with cutoff 1000000000.0])

    Changing ["xi: 0.6->0.4"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 39 runs with cutoff 1000000000.0]) with flip 21

          
============= Performing 1 bonus runs of state: gs=20 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 39 runs with cutoff 1000000000.0]) ============ 

State wants more detail (39+1) than incumbent (39), doing incumbent first:
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 39 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 39 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 56.600000000000534, 1851.0 [40, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
          -> After 1 bonus runs: gs=20 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 40 runs with cutoff 1000000000.0])

    Changing ["xi: 0.4->0.2"], evaluating ...
        -> worse: (1851.2 [based on 10 runs with cutoff 1000000000.0])
    Changing ["nc: 0.1->0.8"], evaluating ...
601/1000, 60.100000000000584/100000000.0
          -> Take improving step to neighbour gs=20 nc=0.8 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 40 runs with cutoff 1000000000.0]) with flip 22

          
============= Performing 2 bonus runs of state: gs=20 nc=0.8 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 40 runs with cutoff 1000000000.0]) ============ 

State wants more detail (40+1) than incumbent (40), doing incumbent first:
gs=20 nc=0.8 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 40 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 40 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 61.80000000000061, 1851.0 [41, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (41+1) than incumbent (41), doing incumbent first:
gs=20 nc=0.8 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 41 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 41 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 62.00000000000061, 1851.0 [42, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
          -> After 2 bonus runs: gs=20 nc=0.8 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 42 runs with cutoff 1000000000.0])

    Changing ["ne: 0.4->0.1"], evaluating ...
        -> worse: (1854.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["xi: 0.4->0.8"], evaluating ...
        -> worse: (1851.0588235294117 [based on 34 runs with cutoff 1000000000.0])
    Changing ["gs: 20->10"], evaluating ...
        -> worse: (1853.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["nc: 0.8->0.6"], evaluating ...
        -> worse: (1851.1935483870968 [based on 31 runs with cutoff 1000000000.0])
    Changing ["nc: 0.8->0.4"], evaluating ...
        -> worse: (1851.5 [based on 4 runs with cutoff 1000000000.0])
    Changing ["ps: 45->25"], evaluating ...
702/1000, 70.20000000000029/100000000.0
        -> worse: (1851.111111111111 [based on 18 runs with cutoff 1000000000.0])
    Changing ["gs: 20->100"], evaluating ...
        -> worse: (1851.5 [based on 4 runs with cutoff 1000000000.0])
    Changing ["xi: 0.4->0.1"], evaluating ...
        -> worse: (1851.25 [based on 16 runs with cutoff 1000000000.0])
    Changing ["gs: 20->70"], evaluating ...
        -> worse: (1851.0263157894738 [based on 38 runs with cutoff 1000000000.0])
    Changing ["ne: 0.4->0.6"], evaluating ...
        -> worse: (1851.2857142857142 [based on 28 runs with cutoff 1000000000.0])
    Changing ["ps: 45->15"], evaluating ...
        -> worse: (1851.4 [based on 5 runs with cutoff 1000000000.0])
    Changing ["nc: 0.8->0.2"], evaluating ...
803/1000, 80.29999999999971/100000000.0
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 42 runs with cutoff 1000000000.0]) with flip 23

          
============= Performing 12 bonus runs of state: gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 42 runs with cutoff 1000000000.0]) ============ 

State wants more detail (42+1) than incumbent (42), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 42 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 42 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 84.49999999999947, 1851.0 [43, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (43+1) than incumbent (43), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 43 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 43 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 84.69999999999946, 1851.0 [44, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (44+1) than incumbent (44), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 44 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 44 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 84.89999999999945, 1851.0 [45, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (45+1) than incumbent (45), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 45 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 45 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 85.09999999999944, 1851.0 [46, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (46+1) than incumbent (46), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 46 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 46 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 85.29999999999943, 1851.0 [47, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (47+1) than incumbent (47), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 47 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 47 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 85.49999999999942, 1851.0 [48, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (48+1) than incumbent (48), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 48 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 48 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 85.6999999999994, 1851.0 [49, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (49+1) than incumbent (49), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 49 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 49 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 85.8999999999994, 1851.0 [50, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (50+1) than incumbent (50), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 50 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 50 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 86.09999999999938, 1851.0 [51, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (51+1) than incumbent (51), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 51 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 51 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 86.29999999999937, 1851.0 [52, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (52+1) than incumbent (52), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 52 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 52 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 86.49999999999936, 1851.0 [53, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (53+1) than incumbent (53), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 53 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 53 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 86.69999999999935, 1851.0 [54, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
          -> After 12 bonus runs: gs=20 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 54 runs with cutoff 1000000000.0])

    Changing ["ps: 45->15"], evaluating ...
        -> worse: (1852.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["gs: 20->10"], evaluating ...
904/1000, 90.39999999999914/100000000.0
          -> Take improving step to neighbour gs=10 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 54 runs with cutoff 1000000000.0]) with flip 24

          
============= Performing 2 bonus runs of state: gs=10 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 54 runs with cutoff 1000000000.0]) ============ 

State wants more detail (54+1) than incumbent (54), doing incumbent first:
gs=10 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 54 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 54 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 92.49999999999902, 1851.0 [55, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
State wants more detail (55+1) than incumbent (55), doing incumbent first:
gs=10 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 55 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.4 ps=45 xi=0.6 (1851.0 [based on 55 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 92.69999999999901, 1851.017857142857 [56, 1000000000.0]. With state gs=20, nc=0.1, ne=0.4, ps=45, xi=0.6
New inc: 1851.0
New Incumbent: 92.799999999999, 1851.0 [56, 1000000000.0]. With state gs=10, nc=0.2, ne=0.4, ps=45, xi=0.4
          -> After 2 bonus runs: gs=10 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 56 runs with cutoff 1000000000.0])

    Changing ["nc: 0.2->0.1"], evaluating ...
          -> Take improving step to neighbour gs=10 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 56 runs with cutoff 1000000000.0]) with flip 25

          
============= Performing 1 bonus runs of state: gs=10 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 56 runs with cutoff 1000000000.0]) ============ 

State wants more detail (56+1) than incumbent (56), doing incumbent first:
gs=10 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 56 runs with cutoff 1000000000.0])
gs=10 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 56 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 98.49999999999868, 1851.0 [57, 1000000000.0]. With state gs=10, nc=0.2, ne=0.4, ps=45, xi=0.4
          -> After 1 bonus runs: gs=10 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 57 runs with cutoff 1000000000.0])

    Changing ["ne: 0.4->0.6"], evaluating ...
        -> worse: (1852.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["ps: 45->35"], evaluating ...
ParamILS has reached the specified maximum number of 1000 function evaluations => stopping the search now.
ParamILS has reached the specified maximum number of 1000 function evaluations => stopping the search now.
        -> worse: (1851.0 [based on 12 runs with cutoff 1000000000.0])
ParamILS has reached the specified maximum number of 1000 function evaluations => stopping the search now.
          
============= Performing 2 bonus runs of state: gs=10 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 57 runs with cutoff 1000000000.0]) ============ 

ParamILS has reached the specified maximum number of 1000 function evaluations => stopping the search now.
          -> After 2 bonus runs for LM: gs=10 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 57 runs with cutoff 1000000000.0])

   LM for iteration 1: gs=10 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 57 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 1): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 1): gs=10, nc=0.2, ne=0.4, ps=45, xi=0.4
==================================================================
Training quality of this incumbent parameter configuration: 1851.0, based on 57 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
gs=10 nc=0.1 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 57 runs with cutoff 1000000000.0])
gs=10 nc=0.2 ne=0.4 ps=45 xi=0.4 (1851.0 [based on 57 runs with cutoff 1000000000.0])
LM better, change incumbent
New Incumbent: 99.9999999999986, 1851.0 [57, 1000000000.0]. With state gs=10, nc=0.1, ne=0.4, ps=45, xi=0.4
ParamILS has reached the specified maximum number of 1000 function evaluations => stopping the search now.
Final solution for depth 1 with limit N=2000, and cutoff time=1000000000.0.
New Incumbent: 99.9999999999986, 1851.0 [57, 1000000000.0]. With state gs=10, nc=0.1, ne=0.4, ps=45, xi=0.4

==================================================================
ParamILS is finished.
==================================================================

Final best parameter configuration found: gs=10, nc=0.1, ne=0.4, ps=45, xi=0.4
==================================================================
Active parameters: gs=10, nc=0.1, ne=0.4, ps=45, xi=0.4

==================================================================
Training quality of this final best found parameter configuration: 1851.0, based on 57 runs with cutoff 1000000000.0
==================================================================


==================================================================
Computing validation result on independent data -- 0 runs with cutoff time 1000000000.0...
==================================================================
Combined result: 1000000000000000000

================================================================
Final best parameter configuration: gs=10, nc=0.1, ne=0.4, ps=45, xi=0.4
==================================================================
Active parameters: gs=10, nc=0.1, ne=0.4, ps=45, xi=0.4

================================================================
Training quality of this final best found parameter configuration: 1851.0, based on 57 runs with cutoff 1000000000.0
Test quality of this final best found parameter configuration: 1000000000000000000, based on 0 independent runs with cutoff 1000000000.0
==================================================================
