Call: /usr/bin/ruby ../scripts/param_ils_2_3_run.rb "-numRun" "0" "-approach" "focused" "-userunlog" "1" "-validN" "0" "-pruning" "0" "-maxEvals" "1000" "-scenariofile" "../_R2_2_7_baseTuning/scn/SolveVRP.scn"


seed: 1234
algo: bash SolveVRP.sh
tunerTimeout (CPU time): 100000000.0
maxWallTime: 8640000.0
maxEvals: 1000
run_obj: runlength
overall_obj: mean
instance_file: inst/single.inst
test_instance_file: inst/single.inst
N: 2000
cutoff_time: 1000000000.0
cutoff_length: 2147483647
R: 10
pertubation_strength_basic: 
pertubation_strength_scaling: false
p_restart: 0.01
Run 1
Level 
========================================================
Starting ILS for level 1, i.e. a limit of N=2000, and cutoff time=1000000000.0.
Current CPU time = 0, this run goes until 100000000.0 
========================================================
New Incumbent: 0, 100000000 [0, 0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
 Same incumbent, new precision:
New Incumbent: 0.1, 2298.0 [1, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
          -> Take improving step to random gs=70 nc=0.8 ne=0.8 ps=5 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=20 nc=0.2 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 1 runs with cutoff 1000000000.0])

        -> Worse random: gs=100 nc=0.4 ne=0.4 ps=5 xi=0.1 (2299.0 [based on 1 runs with cutoff 1000000000.0])
          -> Take improving step to random gs=100 nc=0.1 ne=0.2 ps=25 xi=0.1 (2298.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=70 nc=0.8 ne=0.4 ps=25 xi=0.6 (2298.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=70 nc=0.1 ne=0.2 ps=35 xi=0.1 (2298.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=70 nc=0.4 ne=0.6 ps=45 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=70 nc=0.6 ne=0.6 ps=25 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=70 nc=0.8 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random gs=20 nc=0.8 ne=0.1 ps=45 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0])

   BLS in iteration 1, start with gs=20 nc=0.8 ne=0.1 ps=45 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["nc: 0.8->0.2"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.1 ps=45 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0]) with flip 1

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.1 ps=45 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

State wants more detail (1+1) than incumbent (1), doing incumbent first:
gs=20 nc=0.2 ne=0.1 ps=45 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0])
gs=40 nc=0.4 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 1 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 1.3, 2298.0 [2, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.1 ps=45 xi=0.2 (2298.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["ps: 45->15"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.1 ps=15 xi=0.2 (2298.0 [based on 2 runs with cutoff 1000000000.0]) with flip 2

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.1 ps=15 xi=0.2 (2298.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

State wants more detail (2+1) than incumbent (2), doing incumbent first:
gs=20 nc=0.2 ne=0.1 ps=15 xi=0.2 (2298.0 [based on 2 runs with cutoff 1000000000.0])
gs=40 nc=0.4 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 2 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 1.7000000000000004, 2298.0 [3, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.1 ps=15 xi=0.2 (2298.0 [based on 3 runs with cutoff 1000000000.0])

    Changing ["xi: 0.2->0.1"], evaluating ...
        -> worse: (2299.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["ne: 0.1->0.4"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.4 ps=15 xi=0.2 (2298.0 [based on 3 runs with cutoff 1000000000.0]) with flip 3

          
============= Performing 2 bonus runs of state: gs=20 nc=0.2 ne=0.4 ps=15 xi=0.2 (2298.0 [based on 3 runs with cutoff 1000000000.0]) ============ 

State wants more detail (3+1) than incumbent (3), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=15 xi=0.2 (2298.0 [based on 3 runs with cutoff 1000000000.0])
gs=40 nc=0.4 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 3 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 2.400000000000001, 2298.0 [4, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
State wants more detail (4+1) than incumbent (4), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=15 xi=0.2 (2303.75 [based on 4 runs with cutoff 1000000000.0])
gs=40 nc=0.4 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 4 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 2.600000000000001, 2298.0 [5, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
          -> After 2 bonus runs: gs=20 nc=0.2 ne=0.4 ps=15 xi=0.2 (2303.0 [based on 5 runs with cutoff 1000000000.0])

    Changing ["ps: 15->25"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.4 ps=25 xi=0.2 (2298.0 [based on 5 runs with cutoff 1000000000.0]) with flip 4

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.4 ps=25 xi=0.2 (2298.0 [based on 5 runs with cutoff 1000000000.0]) ============ 

State wants more detail (5+1) than incumbent (5), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=25 xi=0.2 (2298.0 [based on 5 runs with cutoff 1000000000.0])
gs=40 nc=0.4 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 5 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 3.3000000000000016, 2298.0 [6, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.4 ps=25 xi=0.2 (2298.0 [based on 6 runs with cutoff 1000000000.0])

    Changing ["nc: 0.2->0.6"], evaluating ...
        -> worse: (2301.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["xi: 0.2->0.4"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 6 runs with cutoff 1000000000.0]) with flip 5

          
============= Performing 2 bonus runs of state: gs=20 nc=0.2 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 6 runs with cutoff 1000000000.0]) ============ 

State wants more detail (6+1) than incumbent (6), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 6 runs with cutoff 1000000000.0])
gs=40 nc=0.4 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 6 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 4.300000000000001, 2300.5714285714284 [7, 1000000000.0]. With state gs=40, nc=0.4, ne=0.4, ps=25, xi=0.4
New inc: 2298.0
New Incumbent: 4.4, 2298.0 [7, 1000000000.0]. With state gs=20, nc=0.2, ne=0.4, ps=25, xi=0.4
 Same incumbent, new precision:
New Incumbent: 4.5, 2298.0 [8, 1000000000.0]. With state gs=20, nc=0.2, ne=0.4, ps=25, xi=0.4
          -> After 2 bonus runs: gs=20 nc=0.2 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 8 runs with cutoff 1000000000.0])

    Changing ["xi: 0.4->0.8"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.4 ps=25 xi=0.8 (2298.0 [based on 8 runs with cutoff 1000000000.0]) with flip 6

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.4 ps=25 xi=0.8 (2298.0 [based on 8 runs with cutoff 1000000000.0]) ============ 

State wants more detail (8+1) than incumbent (8), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=25 xi=0.8 (2298.0 [based on 8 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 8 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5.399999999999997, 2298.0 [9, 1000000000.0]. With state gs=20, nc=0.2, ne=0.4, ps=25, xi=0.4
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.4 ps=25 xi=0.8 (2299.222222222222 [based on 9 runs with cutoff 1000000000.0])

    Changing ["ps: 25->35"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.2 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 9 runs with cutoff 1000000000.0]) with flip 7

          
============= Performing 1 bonus runs of state: gs=20 nc=0.2 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 9 runs with cutoff 1000000000.0]) ============ 

State wants more detail (9+1) than incumbent (9), doing incumbent first:
gs=20 nc=0.2 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 9 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 9 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6.399999999999993, 2298.0 [10, 1000000000.0]. With state gs=20, nc=0.2, ne=0.4, ps=25, xi=0.4
          -> After 1 bonus runs: gs=20 nc=0.2 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 10 runs with cutoff 1000000000.0])

    Changing ["gs: 20->70"], evaluating ...
          -> Take improving step to neighbour gs=70 nc=0.2 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 10 runs with cutoff 1000000000.0]) with flip 8

          
============= Performing 1 bonus runs of state: gs=70 nc=0.2 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 10 runs with cutoff 1000000000.0]) ============ 

State wants more detail (10+1) than incumbent (10), doing incumbent first:
gs=70 nc=0.2 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 10 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 10 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 7.599999999999989, 2298.0 [11, 1000000000.0]. With state gs=20, nc=0.2, ne=0.4, ps=25, xi=0.4
          -> After 1 bonus runs: gs=70 nc=0.2 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 11 runs with cutoff 1000000000.0])

    Changing ["nc: 0.2->0.4"], evaluating ...
        -> worse: (2298.1666666666665 [based on 6 runs with cutoff 1000000000.0])
    Changing ["ps: 35->25"], evaluating ...
        -> worse: (2298.4 [based on 5 runs with cutoff 1000000000.0])
    Changing ["nc: 0.2->0.8"], evaluating ...
          -> Take improving step to neighbour gs=70 nc=0.8 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 11 runs with cutoff 1000000000.0]) with flip 9

          
============= Performing 3 bonus runs of state: gs=70 nc=0.8 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 11 runs with cutoff 1000000000.0]) ============ 

State wants more detail (11+1) than incumbent (11), doing incumbent first:
gs=70 nc=0.8 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 11 runs with cutoff 1000000000.0])
gs=20 nc=0.2 ne=0.4 ps=25 xi=0.4 (2298.0 [based on 11 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 9.89999999999998, 2299.3333333333335 [12, 1000000000.0]. With state gs=20, nc=0.2, ne=0.4, ps=25, xi=0.4
New inc: 2298.0
New Incumbent: 9.99999999999998, 2298.0 [12, 1000000000.0]. With state gs=70, nc=0.8, ne=0.4, ps=35, xi=0.8
101/1000, 10.09999999999998/100000000.0
 Same incumbent, new precision:
New Incumbent: 10.09999999999998, 2298.0 [13, 1000000000.0]. With state gs=70, nc=0.8, ne=0.4, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 10.19999999999998, 2298.1428571428573 [14, 1000000000.0]. With state gs=70, nc=0.8, ne=0.4, ps=35, xi=0.8
          -> After 3 bonus runs: gs=70 nc=0.8 ne=0.4 ps=35 xi=0.8 (2298.1428571428573 [based on 14 runs with cutoff 1000000000.0])

    Changing ["nc: 0.8->0.6"], evaluating ...
New inc: 2298.0
New Incumbent: 11.599999999999975, 2298.0 [14, 1000000000.0]. With state gs=70, nc=0.6, ne=0.4, ps=35, xi=0.8
          -> Take improving step to neighbour gs=70 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 14 runs with cutoff 1000000000.0]) with flip 10

          
============= Performing 1 bonus runs of state: gs=70 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 14 runs with cutoff 1000000000.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 11.699999999999974, 2298.0 [15, 1000000000.0]. With state gs=70, nc=0.6, ne=0.4, ps=35, xi=0.8
          -> After 1 bonus runs: gs=70 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 15 runs with cutoff 1000000000.0])

    Changing ["nc: 0.6->0.1"], evaluating ...
        -> worse: (2298.1428571428573 [based on 14 runs with cutoff 1000000000.0])
    Changing ["gs: 70->100"], evaluating ...
          -> Take improving step to neighbour gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 15 runs with cutoff 1000000000.0]) with flip 11

          
============= Performing 2 bonus runs of state: gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 15 runs with cutoff 1000000000.0]) ============ 

State wants more detail (15+1) than incumbent (15), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 15 runs with cutoff 1000000000.0])
gs=70 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 15 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 14.699999999999964, 2298.0 [16, 1000000000.0]. With state gs=70, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (16+1) than incumbent (16), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 16 runs with cutoff 1000000000.0])
gs=70 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 16 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 14.899999999999963, 2298.1176470588234 [17, 1000000000.0]. With state gs=70, nc=0.6, ne=0.4, ps=35, xi=0.8
New inc: 2298.0
New Incumbent: 14.999999999999963, 2298.0 [17, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
          -> After 2 bonus runs: gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 17 runs with cutoff 1000000000.0])

    Changing ["nc: 0.6->0.2"], evaluating ...
        -> worse: (2298.133333333333 [based on 15 runs with cutoff 1000000000.0])
    Changing ["ps: 35->45"], evaluating ...
        -> worse: (2298.2 [based on 5 runs with cutoff 1000000000.0])
    Changing ["xi: 0.8->0.2"], evaluating ...
        -> worse: (2304.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["xi: 0.8->0.4"], evaluating ...
          -> Take improving step to neighbour gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 17 runs with cutoff 1000000000.0]) with flip 12

          
============= Performing 4 bonus runs of state: gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 17 runs with cutoff 1000000000.0]) ============ 

State wants more detail (17+1) than incumbent (17), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 17 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 17 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 19.1, 2298.0 [18, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (18+1) than incumbent (18), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 18 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 18 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 19.300000000000004, 2298.0 [19, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (19+1) than incumbent (19), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 19 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 19 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 19.500000000000007, 2298.0 [20, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (20+1) than incumbent (20), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 20 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 20 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 19.70000000000001, 2298.0 [21, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
          -> After 4 bonus runs: gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 21 runs with cutoff 1000000000.0])

    Changing ["ps: 35->45"], evaluating ...
        -> worse: (2300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["gs: 100->40"], evaluating ...
201/1000, 20.100000000000016/100000000.0
        -> worse: (2298.1666666666665 [based on 12 runs with cutoff 1000000000.0])
    Changing ["ne: 0.4->0.8"], evaluating ...
        -> worse: (2298.153846153846 [based on 13 runs with cutoff 1000000000.0])
    Changing ["nc: 0.6->0.2"], evaluating ...
        -> worse: (2298.1666666666665 [based on 6 runs with cutoff 1000000000.0])
    Changing ["gs: 100->70"], evaluating ...
        -> worse: (2298.3333333333335 [based on 6 runs with cutoff 1000000000.0])
    Changing ["ne: 0.4->0.6"], evaluating ...
        -> worse: (2304.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["ps: 35->25"], evaluating ...
        -> worse: (2298.6666666666665 [based on 3 runs with cutoff 1000000000.0])
    Changing ["ps: 35->5"], evaluating ...
        -> worse: (2298.285714285714 [based on 7 runs with cutoff 1000000000.0])
    Changing ["ps: 35->15"], evaluating ...
        -> worse: (2300.0 [based on 14 runs with cutoff 1000000000.0])
    Changing ["nc: 0.6->0.1"], evaluating ...
        -> worse: (2298.1 [based on 20 runs with cutoff 1000000000.0])
    Changing ["ne: 0.4->0.1"], evaluating ...
        -> worse: (2298.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["gs: 100->20"], evaluating ...
301/1000, 30.100000000000158/100000000.0
        -> worse: (2299.05 [based on 20 runs with cutoff 1000000000.0])
    Changing ["gs: 100->10"], evaluating ...
        -> worse: (2298.846153846154 [based on 13 runs with cutoff 1000000000.0])
    Changing ["nc: 0.6->0.8"], evaluating ...
        -> worse: (2298.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["xi: 0.4->0.1"], evaluating ...
        -> worse: (2316.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["ne: 0.4->0.2"], evaluating ...
        -> worse: (2300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["nc: 0.6->0.4"], evaluating ...
        -> worse: (2298.1428571428573 [based on 7 runs with cutoff 1000000000.0])
    Changing ["xi: 0.4->0.6"], evaluating ...
        -> worse: (2298.1428571428573 [based on 7 runs with cutoff 1000000000.0])
          
============= Performing 18 bonus runs of state: gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 21 runs with cutoff 1000000000.0]) ============ 

State wants more detail (21+1) than incumbent (21), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 21 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 21 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 33.70000000000021, 2298.0 [22, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (22+1) than incumbent (22), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 22 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 22 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 33.90000000000021, 2298.0 [23, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (23+1) than incumbent (23), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 23 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 23 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 34.100000000000215, 2298.0 [24, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (24+1) than incumbent (24), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 24 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 24 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 34.30000000000022, 2298.0 [25, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (25+1) than incumbent (25), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 25 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 25 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 34.50000000000022, 2298.0 [26, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (26+1) than incumbent (26), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 26 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 26 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 34.70000000000022, 2298.0 [27, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (27+1) than incumbent (27), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0 [based on 27 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 27 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 34.900000000000226, 2298.0 [28, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (28+1) than incumbent (28), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.035714285714 [based on 28 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 28 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 35.10000000000023, 2298.0 [29, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (29+1) than incumbent (29), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0344827586205 [based on 29 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 29 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 35.30000000000023, 2298.0 [30, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (30+1) than incumbent (30), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.0333333333333 [based on 30 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 30 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 35.500000000000234, 2298.0 [31, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
State wants more detail (31+1) than incumbent (31), doing incumbent first:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.032258064516 [based on 31 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.8 (2298.0 [based on 31 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 35.70000000000024, 2298.0625 [32, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.8
New inc: 2298.03125
New Incumbent: 35.80000000000024, 2298.03125 [32, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.4
 Same incumbent, new precision:
New Incumbent: 35.90000000000024, 2298.030303030303 [33, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.4
 Same incumbent, new precision:
New Incumbent: 36.00000000000024, 2298.029411764706 [34, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.4
 Same incumbent, new precision:
New Incumbent: 36.10000000000024, 2298.0285714285715 [35, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.4
 Same incumbent, new precision:
New Incumbent: 36.200000000000244, 2298.027777777778 [36, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.4
 Same incumbent, new precision:
New Incumbent: 36.300000000000246, 2298.027027027027 [37, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.4
 Same incumbent, new precision:
New Incumbent: 36.40000000000025, 2298.0263157894738 [38, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.4
 Same incumbent, new precision:
New Incumbent: 36.50000000000025, 2298.025641025641 [39, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.4
          -> After 18 bonus runs for LM: gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.025641025641 [based on 39 runs with cutoff 1000000000.0])

   LM for iteration 1: gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.025641025641 [based on 39 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 1): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 1): gs=100, nc=0.6, ne=0.4, ps=35, xi=0.4
==================================================================
Training quality of this incumbent parameter configuration: 2298.025641025641, based on 39 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.025641025641 [based on 39 runs with cutoff 1000000000.0])
gs=100 nc=0.6 ne=0.4 ps=35 xi=0.4 (2298.025641025641 [based on 39 runs with cutoff 1000000000.0])
LM better, change incumbent
New Incumbent: 36.50000000000025, 2298.025641025641 [39, 1000000000.0]. With state gs=100, nc=0.6, ne=0.4, ps=35, xi=0.4
365/1000, 36.50000000000025/100000000.0
iteration 2, flip 14, evaluation count 365
    perturb to ---> gs=20 nc=0.6 ne=0.4 ps=35 xi=0.4 (2299.05 [based on 20 runs with cutoff 1000000000.0])
    perturb to ---> gs=20 nc=0.6 ne=0.4 ps=35 xi=0.6 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> gs=20 nc=0.6 ne=0.4 ps=35 xi=0.2 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 2, start with gs=20 nc=0.6 ne=0.4 ps=35 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["nc: 0.6->0.8"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.8 ne=0.4 ps=35 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0]) with flip 14

          
============= Performing 1 bonus runs of state: gs=20 nc=0.8 ne=0.4 ps=35 xi=0.2 (2298.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: gs=20 nc=0.8 ne=0.4 ps=35 xi=0.2 (2298.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["nc: 0.8->0.1"], evaluating ...
        -> worse: (2300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["ne: 0.4->0.1"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.8 ne=0.1 ps=35 xi=0.2 (2298.0 [based on 2 runs with cutoff 1000000000.0]) with flip 15

          
============= Performing 2 bonus runs of state: gs=20 nc=0.8 ne=0.1 ps=35 xi=0.2 (2298.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

          -> After 2 bonus runs: gs=20 nc=0.8 ne=0.1 ps=35 xi=0.2 (2301.0 [based on 4 runs with cutoff 1000000000.0])

    Changing ["xi: 0.2->0.4"], evaluating ...
        -> worse: (2300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["gs: 20->10"], evaluating ...
        -> worse: (2305.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["ne: 0.1->0.6"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.8 ne=0.6 ps=35 xi=0.2 (2298.75 [based on 4 runs with cutoff 1000000000.0]) with flip 16

          
============= Performing 3 bonus runs of state: gs=20 nc=0.8 ne=0.6 ps=35 xi=0.2 (2298.75 [based on 4 runs with cutoff 1000000000.0]) ============ 

          -> After 3 bonus runs: gs=20 nc=0.8 ne=0.6 ps=35 xi=0.2 (2298.4285714285716 [based on 7 runs with cutoff 1000000000.0])

    Changing ["xi: 0.2->0.6"], evaluating ...
        -> worse: (2300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["ne: 0.6->0.2"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.8 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 7 runs with cutoff 1000000000.0]) with flip 17

          
============= Performing 2 bonus runs of state: gs=20 nc=0.8 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 7 runs with cutoff 1000000000.0]) ============ 

          -> After 2 bonus runs: gs=20 nc=0.8 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 9 runs with cutoff 1000000000.0])

    Changing ["gs: 20->40"], evaluating ...
401/1000, 40.1000000000003/100000000.0
          -> Take improving step to neighbour gs=40 nc=0.8 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 9 runs with cutoff 1000000000.0]) with flip 18

          
============= Performing 1 bonus runs of state: gs=40 nc=0.8 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 9 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: gs=40 nc=0.8 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 10 runs with cutoff 1000000000.0])

    Changing ["ps: 35->25"], evaluating ...
        -> worse: (2298.1666666666665 [based on 6 runs with cutoff 1000000000.0])
    Changing ["gs: 40->100"], evaluating ...
        -> worse: (2300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["ps: 35->15"], evaluating ...
        -> worse: (2298.2 [based on 5 runs with cutoff 1000000000.0])
    Changing ["ne: 0.2->0.6"], evaluating ...
        -> worse: (2305.5 [based on 4 runs with cutoff 1000000000.0])
    Changing ["xi: 0.2->0.4"], evaluating ...
        -> worse: (2298.3333333333335 [based on 3 runs with cutoff 1000000000.0])
    Changing ["nc: 0.8->0.1"], evaluating ...
          -> Take improving step to neighbour gs=40 nc=0.1 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 10 runs with cutoff 1000000000.0]) with flip 19

          
============= Performing 6 bonus runs of state: gs=40 nc=0.1 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 10 runs with cutoff 1000000000.0]) ============ 

          -> After 6 bonus runs: gs=40 nc=0.1 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 16 runs with cutoff 1000000000.0])

    Changing ["gs: 40->10"], evaluating ...
        -> worse: (2299.2 [based on 15 runs with cutoff 1000000000.0])
    Changing ["nc: 0.1->0.4"], evaluating ...
        -> worse: (2301.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["nc: 0.1->0.6"], evaluating ...
          -> Take improving step to neighbour gs=40 nc=0.6 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 16 runs with cutoff 1000000000.0]) with flip 20

          
============= Performing 3 bonus runs of state: gs=40 nc=0.6 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 16 runs with cutoff 1000000000.0]) ============ 

          -> After 3 bonus runs: gs=40 nc=0.6 ne=0.2 ps=35 xi=0.2 (2298.0 [based on 19 runs with cutoff 1000000000.0])

    Changing ["gs: 40->10"], evaluating ...
        -> worse: (2299.6153846153848 [based on 13 runs with cutoff 1000000000.0])
    Changing ["ne: 0.2->0.4"], evaluating ...
        -> worse: (2298.4 [based on 5 runs with cutoff 1000000000.0])
    Changing ["ps: 35->25"], evaluating ...
        -> worse: (2300.75 [based on 4 runs with cutoff 1000000000.0])
    Changing ["ne: 0.2->0.8"], evaluating ...
        -> worse: (2300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["xi: 0.2->0.8"], evaluating ...
501/1000, 50.10000000000044/100000000.0
          -> Take improving step to neighbour gs=40 nc=0.6 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 19 runs with cutoff 1000000000.0]) with flip 21

          
============= Performing 5 bonus runs of state: gs=40 nc=0.6 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 19 runs with cutoff 1000000000.0]) ============ 

          -> After 5 bonus runs: gs=40 nc=0.6 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 24 runs with cutoff 1000000000.0])

    Changing ["ne: 0.2->0.1"], evaluating ...
        -> worse: (2300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["gs: 40->70"], evaluating ...
        -> worse: (2301.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["xi: 0.8->0.4"], evaluating ...
        -> worse: (2298.1666666666665 [based on 12 runs with cutoff 1000000000.0])
    Changing ["ps: 35->15"], evaluating ...
          -> Take improving step to neighbour gs=40 nc=0.6 ne=0.2 ps=15 xi=0.8 (2298.0 [based on 24 runs with cutoff 1000000000.0]) with flip 22

          
============= Performing 4 bonus runs of state: gs=40 nc=0.6 ne=0.2 ps=15 xi=0.8 (2298.0 [based on 24 runs with cutoff 1000000000.0]) ============ 

          -> After 4 bonus runs: gs=40 nc=0.6 ne=0.2 ps=15 xi=0.8 (2298.0 [based on 28 runs with cutoff 1000000000.0])

    Changing ["gs: 40->70"], evaluating ...
        -> worse: (2298.181818181818 [based on 11 runs with cutoff 1000000000.0])
    Changing ["xi: 0.8->0.6"], evaluating ...
        -> worse: (2299.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["xi: 0.8->0.1"], evaluating ...
        -> worse: (2299.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["nc: 0.6->0.1"], evaluating ...
601/1000, 60.100000000000584/100000000.0
          -> Take improving step to neighbour gs=40 nc=0.1 ne=0.2 ps=15 xi=0.8 (2298.0 [based on 28 runs with cutoff 1000000000.0]) with flip 23

          
============= Performing 4 bonus runs of state: gs=40 nc=0.1 ne=0.2 ps=15 xi=0.8 (2298.0 [based on 28 runs with cutoff 1000000000.0]) ============ 

          -> After 4 bonus runs: gs=40 nc=0.1 ne=0.2 ps=15 xi=0.8 (2298.0 [based on 32 runs with cutoff 1000000000.0])

    Changing ["ps: 15->35"], evaluating ...
        -> worse: (2298.1 [based on 10 runs with cutoff 1000000000.0])
    Changing ["gs: 40->70"], evaluating ...
        -> worse: (2298.4 [based on 5 runs with cutoff 1000000000.0])
    Changing ["nc: 0.1->0.4"], evaluating ...
        -> worse: (2301.6666666666665 [based on 3 runs with cutoff 1000000000.0])
    Changing ["gs: 40->20"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.1 ne=0.2 ps=15 xi=0.8 (2298.0 [based on 32 runs with cutoff 1000000000.0]) with flip 24

          
============= Performing 4 bonus runs of state: gs=20 nc=0.1 ne=0.2 ps=15 xi=0.8 (2298.0 [based on 32 runs with cutoff 1000000000.0]) ============ 

          -> After 4 bonus runs: gs=20 nc=0.1 ne=0.2 ps=15 xi=0.8 (2298.0555555555557 [based on 36 runs with cutoff 1000000000.0])

    Changing ["ne: 0.2->0.6"], evaluating ...
        -> worse: (2305.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["ps: 15->45"], evaluating ...
        -> worse: (2298.1176470588234 [based on 17 runs with cutoff 1000000000.0])
    Changing ["nc: 0.1->0.2"], evaluating ...
702/1000, 70.20000000000029/100000000.0
        -> worse: (2298.4444444444443 [based on 27 runs with cutoff 1000000000.0])
    Changing ["gs: 20->100"], evaluating ...
        -> worse: (2299.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["xi: 0.8->0.2"], evaluating ...
        -> worse: (2299.55 [based on 20 runs with cutoff 1000000000.0])
    Changing ["ne: 0.2->0.1"], evaluating ...
        -> worse: (2299.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["ne: 0.2->0.4"], evaluating ...
        -> worse: (2316.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["gs: 20->10"], evaluating ...
        -> worse: (2300.25 [based on 4 runs with cutoff 1000000000.0])
    Changing ["xi: 0.8->0.4"], evaluating ...
        -> worse: (2303.3333333333335 [based on 3 runs with cutoff 1000000000.0])
    Changing ["ps: 15->5"], evaluating ...
        -> worse: (2328.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["nc: 0.1->0.4"], evaluating ...
        -> worse: (2298.222222222222 [based on 9 runs with cutoff 1000000000.0])
    Changing ["nc: 0.1->0.6"], evaluating ...
        -> worse: (2298.4 [based on 5 runs with cutoff 1000000000.0])
    Changing ["xi: 0.8->0.6"], evaluating ...
        -> worse: (2298.0526315789475 [based on 19 runs with cutoff 1000000000.0])
    Changing ["ne: 0.2->0.8"], evaluating ...
        -> worse: (2370.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["nc: 0.1->0.8"], evaluating ...
803/1000, 80.29999999999971/100000000.0
        -> worse: (2298.08 [based on 25 runs with cutoff 1000000000.0])
    Changing ["xi: 0.8->0.1"], evaluating ...
        -> worse: (2303.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["ps: 15->35"], evaluating ...
          -> Take improving step to neighbour gs=20 nc=0.1 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 36 runs with cutoff 1000000000.0]) with flip 25

          
============= Performing 17 bonus runs of state: gs=20 nc=0.1 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 36 runs with cutoff 1000000000.0]) ============ 

New inc: 2298.0
New Incumbent: 84.49999999999947, 2298.0 [39, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 84.59999999999947, 2298.0 [40, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 84.69999999999946, 2298.0 [41, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 84.79999999999946, 2298.0 [42, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 84.89999999999945, 2298.0 [43, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 84.99999999999945, 2298.0 [44, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 85.09999999999944, 2298.0 [45, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 85.19999999999943, 2298.0 [46, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 85.29999999999943, 2298.0 [47, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 85.39999999999942, 2298.0 [48, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 85.49999999999942, 2298.0 [49, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 85.59999999999941, 2298.0 [50, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 85.6999999999994, 2298.0 [51, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 85.7999999999994, 2298.0 [52, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
 Same incumbent, new precision:
New Incumbent: 85.8999999999994, 2298.0 [53, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
          -> After 17 bonus runs: gs=20 nc=0.1 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 53 runs with cutoff 1000000000.0])

    Changing ["xi: 0.8->0.2"], evaluating ...
        -> worse: (2298.214285714286 [based on 14 runs with cutoff 1000000000.0])
    Changing ["ne: 0.2->0.4"], evaluating ...
        -> worse: (2315.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["gs: 20->100"], evaluating ...
        -> worse: (2299.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["nc: 0.1->0.4"], evaluating ...
904/1000, 90.39999999999914/100000000.0
          -> Take improving step to neighbour gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 53 runs with cutoff 1000000000.0]) with flip 26

          
============= Performing 4 bonus runs of state: gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 53 runs with cutoff 1000000000.0]) ============ 

State wants more detail (53+1) than incumbent (53), doing incumbent first:
gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 53 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 53 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 92.99999999999899, 2298.0 [54, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
State wants more detail (54+1) than incumbent (54), doing incumbent first:
gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 54 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 54 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 93.19999999999898, 2298.0 [55, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
State wants more detail (55+1) than incumbent (55), doing incumbent first:
gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 55 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 55 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 93.39999999999897, 2298.0 [56, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
State wants more detail (56+1) than incumbent (56), doing incumbent first:
gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 56 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 56 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 93.59999999999896, 2298.0 [57, 1000000000.0]. With state gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
          -> After 4 bonus runs: gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 57 runs with cutoff 1000000000.0])

    Changing ["gs: 20->40"], evaluating ...
        -> worse: (2298.1111111111113 [based on 18 runs with cutoff 1000000000.0])
    Changing ["ps: 35->5"], evaluating ...
        -> worse: (2308.6666666666665 [based on 3 runs with cutoff 1000000000.0])
    Changing ["xi: 0.8->0.6"], evaluating ...
        -> worse: (2298.0833333333335 [based on 24 runs with cutoff 1000000000.0])
    Changing ["nc: 0.4->0.8"], evaluating ...
ParamILS has reached the specified maximum number of 1000 function evaluations => stopping the search now.
ParamILS has reached the specified maximum number of 1000 function evaluations => stopping the search now.
        -> worse: (2298.0 [based on 18 runs with cutoff 1000000000.0])
ParamILS has reached the specified maximum number of 1000 function evaluations => stopping the search now.
          
============= Performing 4 bonus runs of state: gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 57 runs with cutoff 1000000000.0]) ============ 

ParamILS has reached the specified maximum number of 1000 function evaluations => stopping the search now.
          -> After 4 bonus runs for LM: gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 57 runs with cutoff 1000000000.0])

   LM for iteration 2: gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 57 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 2): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 2): gs=20, nc=0.1, ne=0.2, ps=35, xi=0.8
==================================================================
Training quality of this incumbent parameter configuration: 2298.0, based on 57 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 57 runs with cutoff 1000000000.0])
gs=20 nc=0.1 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 57 runs with cutoff 1000000000.0])
LM better, change incumbent
New Incumbent: 99.9999999999986, 2298.0 [57, 1000000000.0]. With state gs=20, nc=0.4, ne=0.2, ps=35, xi=0.8
   Accepting new better local optimum: gs=20 nc=0.4 ne=0.2 ps=35 xi=0.8 (2298.0 [based on 57 runs with cutoff 1000000000.0])
ParamILS has reached the specified maximum number of 1000 function evaluations => stopping the search now.
Final solution for depth 1 with limit N=2000, and cutoff time=1000000000.0.
New Incumbent: 99.9999999999986, 2298.0 [57, 1000000000.0]. With state gs=20, nc=0.4, ne=0.2, ps=35, xi=0.8

==================================================================
ParamILS is finished.
==================================================================

Final best parameter configuration found: gs=20, nc=0.4, ne=0.2, ps=35, xi=0.8
==================================================================
Active parameters: gs=20, nc=0.4, ne=0.2, ps=35, xi=0.8

==================================================================
Training quality of this final best found parameter configuration: 2298.0, based on 57 runs with cutoff 1000000000.0
==================================================================


==================================================================
Computing validation result on independent data -- 0 runs with cutoff time 1000000000.0...
==================================================================
Combined result: 1000000000000000000

================================================================
Final best parameter configuration: gs=20, nc=0.4, ne=0.2, ps=35, xi=0.8
==================================================================
Active parameters: gs=20, nc=0.4, ne=0.2, ps=35, xi=0.8

================================================================
Training quality of this final best found parameter configuration: 2298.0, based on 57 runs with cutoff 1000000000.0
Test quality of this final best found parameter configuration: 1000000000000000000, based on 0 independent runs with cutoff 1000000000.0
==================================================================
